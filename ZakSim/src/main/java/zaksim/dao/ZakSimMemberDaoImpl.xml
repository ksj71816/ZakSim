<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="zaksim.dao.ZakSimMemberDao">
  
  <resultMap type="zaksim.dto.ZakSimMember" id="ZakSimMember">
  	<result property="memberType" column="member_type"/>
  	<result property="joinDate" column="join_date"/>
  	<result property="suspensionDate" column="suspension_date"/>
  	<result property="suspendNum" column="suspend_num"/>
  	<result property="leaveDate" column="leave_date"/>
  </resultMap>
  
  <resultMap type="zaksim.dto.MStatistics" id="MStatistics">
  	<result property="todayCount" column="today_count"/>
  	<result property="joinCount" column="join_count"/>
  	<result property="yesterdayCount" column="yesterday_count"/>
  </resultMap>
  
  
  <!--                      관리자                                                  -->
  
  <select id="selectMemberInfoByIdx" parameterType="zaksim.dto.ZakSimMember" resultMap="ZakSimMember">
  	SELECT * FROM ZakSimMember WHERE idx=#{idx}
  </select>
  
  <select id="selectAdminMember" parameterType="zaksim.dto.ZakSimMember" resultType="int">
  	SELECT COUNT(*)
  	FROM ZakSimMember
  	WHERE id=#{id} AND password=#{password}
  </select>
  
  <select id="selectTotalMemberCount" parameterType="map" resultType="int">
	SELECT COUNT(*) FROM (
		SELECT * FROM ZakSimMember
		WHERE id != 'admin'
		AND id LIKE '%' || #{searchId} || '%'
		<if test="category == '계정 정지 회원'">
			AND suspension_date IS NOT NULL
		</if>
		ORDER BY idx DESC
	) z
	LEFT JOIN (
		SELECT COUNT(*) reportNum, member_idx FROM Report 
		GROUP BY member_idx) zr
	ON zr.member_idx=z.idx
	<if test="category == '계정 정지 대상'">
	WHERE zr.reportNum <![CDATA[ > ]]>= 10
	</if>
	ORDER BY idx DESC
  </select>
  
  <select id="selectAdminMemberList" parameterType="map" resultMap="ZakSimMember">
  	SELECT * FROM ( 
		SELECT rownum rnum, Zak.* FROM (
			SELECT * FROM (
				SELECT * FROM ZakSimMember
				WHERE id != 'admin'
				AND id LIKE '%' || #{searchId} || '%'
				<if test="category == '계정 정지 회원'">
					AND suspension_date IS NOT NULL
				</if>
				ORDER BY idx DESC
			) z
			LEFT JOIN (
				SELECT COUNT(*) reportNum, member_idx FROM Report 
				GROUP BY member_idx) zr
			ON zr.member_idx=z.idx
			<if test="category == '계정 정지 대상'">
			WHERE zr.reportNum <![CDATA[ > ]]>= 10
			</if>
			ORDER BY idx DESC
		) Zak
		ORDER BY rnum
	)
	WHERE rnum BETWEEN #{paging.startNo} AND #{paging.endNo}
  </select>
  	
  	<select id="selectJoinNum" parameterType="map" resultType="int">
	  	SELECT COUNT(*)
	  	FROM ZakSimMember
	  	WHERE id != 'admin'
	  	AND TO_CHAR(join_date, 'YYYY-MM-DD') <![CDATA[ > ]]>= #{startDate}
	  	AND TO_CHAR(join_date, 'YYYY-MM-DD') <![CDATA[ < ]]>= #{endDate}
	  	ORDER BY join_date ASC
  	</select>
  	
  	<select id="selectMStatisticsDetailData" parameterType="map" resultMap="MStatistics">
  		SELECT mj.*, v.visits
  		FROM (
	  		SELECT mc.membercount_date today, mc.membercount today_count, mc.join_count, mem.membercount_date yesterday, mem.membercount yesterday_count
	  		FROM (
				SELECT c.*, DECODE(m.join_count, NULL, 0, m.join_count) as join_count
				FROM (
					SELECT * FROM memberCount
					WHERE membercount_date <![CDATA[ > ]]>= to_date(#{startDate}, 'YYYY/MM/DD')
					AND membercount_date <![CDATA[ < ]]>= to_date(#{endDate}, 'YYYY/MM/DD')
					ORDER BY membercount_date asc) c
				LEFT JOIN (SELECT count(*) join_count, join_date FROM zaksimMember GROUP BY join_date) m
				ON c.membercount_date = m.join_date) mc
			LEFT JOIN membercount mem
			ON mem.membercount_date = mc.membercount_date-1) mj
		LEFT JOIN Visits v
		ON v.visit_date = mj.today
  	</select>
  	
  	<update id="updateMemberStatus" parameterType="int">
  		UPDATE zakSimMember
  		SET status='suspend', suspension_date=sysdate, suspend_num=suspend_num+1
  		WHERE idx=#{idx}
  	</update>
  
  <!--                      관리자                                                  -->
  
  
  <!--						로그인						 -->
  <!-- 로그인 -->
  <select id="login" parameterType="zaksim.dto.ZakSimMember" resultType="int">
  	SELECT COUNT(*) FROM ZakSimMember
  	WHERE member_type = 'zaksim'
  	AND id = #{id}
  	AND password = #{password}
  </select>
  
  <!-- 회원정보 -->
  <select id="memberInfo" parameterType="zaksim.dto.ZakSimMember" resultMap="ZakSimMember">
  	SELECT * FROM ZakSimMember
  	WHERE member_type = 'zaksim'
  	AND id = #{id}
  </select>
  
  <!-- ID 찾기 -->
  <select id="findId" parameterType="map" resultType="string">
  	SELECT id FROM ZakSimMember
  	WHERE member_type = 'zaksim'
  	AND name = #{name}
  	AND email = #{email}
  </select>
  
  <!-- 비밀번호 찾기 - 해당 회원이 있는지 확인 -->
  <select id="findPw" parameterType="map" resultType="int">
  	SELECT COUNT(*) FROM ZakSimMember
  	WHERE member_type = 'zaksim'
  	AND id = #{id}
  	AND name = #{name}
  	AND email = #{email}
  </select>
  
  <!-- 비밀번호 찾기 - 임시 비밀번호 DB에 저장 -->
  <update id="findPwResult" parameterType="map">
  	UPDATE ZakSimMember
  	SET password = #{ranPw}
  	WHERE member_type = 'zaksim' AND id = #{id}
  </update>
  
  <!-- 회원가입 -->
  <insert id="join" parameterType="zaksim.dto.ZakSimMember">
  	INSERT INTO ZakSimMember(idx, member_type, id, password, nick, name, email, phone, status)
  	VALUES (ZaksimMember_SEQ.NEXTVAL, 'zaksim', #{id}, #{password}, #{nick}, #{name}, #{email}, #{phone}, 'normal')
  </insert>
  
  <!-- 회원가입 - 아이디 중복 체크 -->
  <select id="checkId" parameterType="string" resultType="int">
  	SELECT COUNT(*) FROM ZakSimMember
  	WHERE member_type = 'zaksim'
  	AND id = #{id}
  </select>
  
  <!-- 회원가입 - 닉네임 중복 체크 -->
  <select id="checkNick" parameterType="string" resultType="int">
  	SELECT COUNT(*) FROM ZakSimMember
  	WHERE member_type = 'zaksim'
  	AND nick = #{nick}
  </select>
  <!--						로그인						 -->
  
  </mapper>