<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="zaksim.dao.CommunityListDAO">



	<select id="categoryList"
		resultType="zaksim.dto.CommunityCategory">
		select * from CommunityCategory order by idx asc
	</select>

<!-- 	<select id="newGroupList" resultType="zaksim.dto.CommunityGroup"> -->
<!-- 		select * from -->
<!-- 		CommunityGroup order by idx desc -->
<!-- 	</select> -->

	<resultMap type="zaksim.dto.CommunityGroup"
		id="CommunityGroup">
		<result column="g_idx" property="idx" />
		<result column="member_idx" property="member_idx" />
		<result column="category_idx" property="category_idx" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="image" property="image" />
		<result column="max" property="max" />
		<result column="open_date" property="open_date" />
		<result column="secret" property="secret" />
		<result column="password" property="password" />
	</resultMap>

	<resultMap type="zaksim.dto.GroupKeyword" id="GroupKeyword">
		<result column="idx" property="idx" />
		<result column="group_idx" property="group_idx" />
		<result column="keyword" property="keyword" />
		<collection property="communityGroup"
			resultMap="CommunityGroup" />
	</resultMap>

	<resultMap type="zaksim.dto.GroupLike" id="GroupLike">
		<result column="like_num" property="likeNum" />
		<result column="idx" property="idx" />
		<result column="l_group_idx" property="group_idx" />
		<result column="member_idx" property="member_idx" />
		<collection property="communityGroup" resultMap="CommunityGroup" />
		<collection property="groupKeyword" resultMap="GroupKeyword" />
	</resultMap>

	<select id="joinedGroupList" resultMap="GroupLike">
		select * from
		(select c.idx g_idx,
		c.title, c.content, c.image, c.max, c.open_date, c.secret, c.password
		from groupmember m, communitygroup c where m.member_idx=2 and
		m.group_idx=c.idx
		) g
		left join (select count(*) like_num, group_idx
		l_group_idx from grouplike
		GROUP BY group_idx) l on
		l.l_group_idx=g.g_idx
	</select>

	<select id="keywordList" resultMap="GroupKeyword">
		select k.group_idx, k.keyword
		from
		communityGroup g, GroupKeyword k
		where g.idx=k.group_idx
	</select>

	<select id="popularGroupList" resultMap="GroupLike">
		SELECT
		*
		FROM
		(SELECT g.idx g_idx, g.title ,g.content , g.image ,g.max , g.open_date , g.secret
		, g.password
		, k.keyword
		FROM CommunityGroup g, GroupKeyword k
		WHERE g.idx = k.group_idx ) gk
		left join (select count(*) as like_num, group_idx as l_group_idx from
		grouplike
		GROUP BY group_idx order by like_num desc) l on l.l_group_idx=gk.g_idx
	</select>
	
		<select id="newGroupList" resultMap="GroupLike">
			SELECT
		*
		FROM
		(SELECT g.idx g_idx, g.title ,g.content , g.image ,g.max , g.open_date , g.secret
		, g.password
		, k.keyword
		FROM CommunityGroup g, GroupKeyword k
		WHERE g.idx = k.group_idx order by g.idx desc) gk
		left join (select count(*) as like_num, group_idx as l_group_idx from
		grouplike
		GROUP BY group_idx) l on l.l_group_idx=gk.g_idx
		</select>

<!-- 	<select id="newGroupList" resultMap="GroupLike"> -->
<!-- 		select -->
<!-- 		g.idx g_idx, -->
<!-- 		g.title, g.content, g.image, g.max, g.open_date, g.private, -->
<!-- 		g.password from -->
<!-- 		communityGroup g -->
<!-- 		left join (select count(*) like_num, -->
<!-- 		gruop_idx -->
<!-- 		l_gruop_idx from grouplike -->
<!-- 		GROUP BY gruop_idx) l -->
<!-- 		on l.l_gruop_idx=g.idx -->
<!-- 		order by g.idx desc -->
<!-- 	</select> -->


</mapper>