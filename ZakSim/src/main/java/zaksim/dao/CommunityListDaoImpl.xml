<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="zaksim.dao.CommunityListDAO">


	<resultMap type="zaksim.dto.CommunityGroup"
		id="CommunityGroup">
		<result column="g_idx" property="idx" />
		<result column="member_idx" property="member_idx" />
		<result column="category_idx" property="category_idx" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="image" property="image" />
		<result column="storedName" property="storedName" />
		<result column="max" property="max" />
		<result column="open_date" property="open_date" />
		<result column="secret" property="secret" />
		<result column="password" property="password" />
		<result column="g_like_num" property="likeNum" />

	</resultMap>

	<resultMap type="zaksim.dto.GroupKeyword" id="GroupKeyword">
		<result column="idx" property="idx" />
		<result column="group_idx" property="group_idx" />
		<result column="keyword" property="keyword" />
	</resultMap>

	<resultMap type="zaksim.dto.GroupLike" id="GroupLike">
		<result column="like_num" property="likeNum" />
		<result column="idx" property="idx" />
		<result column="l_group_idx" property="group_idx" />
		<result column="member_idx" property="member_idx" />
		<collection property="communityGroup"
			resultMap="CommunityGroup" />
	</resultMap>
	

	<resultMap type="zaksim.dto.CommunityCategory"
		id="CommunityCategory">
		<result column="idx" property="idx" />
		<result column="category" property="category" />
		<result column="image" property="image" />
	</resultMap>
	
	
	

	<select id="categoryList" resultMap="CommunityCategory">
		select * from CommunityCategory order by idx asc
	</select>
	

	<select id="joinedGroupList" resultMap="CommunityGroup" parameterType="int">
      select c.idx g_idx, c.title, c.content, c.image, c.storedName, c.max, c.open_date, c.secret, c.password, l.like_num g_like_num
      from (
		select distinct group_idx from groupMember where member_idx=#{idx}) gm
		left join communityGroup c
		on gm.group_idx=c.idx
		left join (select count(*) like_num, group_idx l_group_idx 
		            from grouplike
		            GROUP BY group_idx
		            ) l 
		on l.l_group_idx=c.idx
	</select>

<!-- 	<select id="joinedGroupList" resultMap="GroupLike"> -->
<!-- 		select * from -->
<!-- 		(select -->
<!-- 		c.idx g_idx, -->
<!-- 		c.title, c.content, c.image, c.max, c.open_date, c.secret, -->
<!-- 		c.password -->
<!-- 		from groupmember m, communitygroup c where m.member_idx=2 -->
<!-- 		and -->
<!-- 		m.group_idx=c.idx -->
<!-- 		) g -->
<!-- 		left join (select count(*) like_num, group_idx -->
<!-- 		l_group_idx from grouplike -->
<!-- 		GROUP BY group_idx) l on -->
<!-- 		l.l_group_idx=g.g_idx -->
<!-- 	</select> -->

	<select id="keywordList" resultMap="GroupKeyword">
		select k.group_idx, k.keyword
		from
		communityGroup g, GroupKeyword k
		where g.idx=k.group_idx
	</select>

	<select id="categoryList2" resultMap="CommunityCategory">
		select distinct c.idx, c.image, c.category
		from
		communityGroup g, CommunityCategory c
		where
		c.idx= g.category_idx
	</select>
	


	<!-- <select id="popularGroupList" resultMap="GroupLike"> -->
	<!-- SELECT -->
	<!-- * -->
	<!-- FROM -->
	<!-- (SELECT g.idx g_idx, g.title ,g.content , g.image ,g.max , g.open_date 
		, g.secret -->
	<!-- , g.password -->
	<!-- , k.keyword -->
	<!-- FROM CommunityGroup g, GroupKeyword k -->
	<!-- WHERE g.idx = k.group_idx ) gk -->
	<!-- left join (select count(*) as like_num, group_idx as l_group_idx from -->
	<!-- grouplike -->
	<!-- GROUP BY group_idx order by like_num desc, null desc) l on l.l_group_idx=gk.g_idx -->
	<!-- </select> -->

	<select id="popularGroupList" resultMap="CommunityGroup">
	SELECT * from (
	    SELECT rownum rnum, gl.*
			FROM (
				SELECT
				*
				FROM (
					SELECT g.idx
					g_idx, g.title ,g.content , g.image, g.storedName ,g.max , g.open_date , g.secret
					, g.password, g.member_idx
					FROM CommunityGroup 
					g order by g_idx asc
				) gk
				left join (
					select count(*) as
					g_like_num, group_idx as l_group_idx 
					from
					grouplike
					GROUP BY group_idx
<!-- 					order by g_like_num desc nulls last -->
				) l on l.l_group_idx=gk.g_idx
				order by l.g_like_num desc nulls last
			) gl
	    ) rgl
	    WHERE rgl.rnum <![CDATA[ < ]]>=3
	</select>




	<select id="newGroupList" resultMap="CommunityGroup">
	  SELECT * from (
	    SELECT rownum rnum, gl.*
			FROM (
				SELECT
			          g.idx g_idx, 
			          g.title,
			          g.content,
			          g.image,
			          g.storedName,
			       	  g.max,
			          g.open_date,
			          g.secret,
			          g.password,
			          g.member_idx,
			          like_num g_like_num
			      FROM CommunityGroup g
			      left join (
			          select count(*) as like_num, group_idx as l_group_idx from grouplike
			          GROUP BY group_idx
			      ) l
			      on l.l_group_idx=g.idx
	              order by idx desc
		    ) gl
	    ) rgl
	    WHERE rgl.rnum <![CDATA[ < ]]>=3

	</select>


	<!-- <select id="newGroupList" resultMap="GroupLike"> -->
	<!-- SELECT -->
	<!-- * -->
	<!-- FROM -->
	<!-- (SELECT g.idx g_idx, g.title ,g.content , g.image ,g.max , g.open_date 
		, g.secret -->
	<!-- , g.password -->
	<!-- , k.keyword -->
	<!-- FROM CommunityGroup g, GroupKeyword k -->
	<!-- WHERE g.idx = k.group_idx order by g.idx desc) gk -->
	<!-- left join (select count(*) as like_num, group_idx as l_group_idx from -->
	<!-- grouplike -->
	<!-- GROUP BY group_idx) l on l.l_group_idx=gk.g_idx -->
	<!-- </select> -->

	<!-- <select id="newGroupList" resultMap="GroupLike"> -->
	<!-- select -->
	<!-- g.idx g_idx, -->
	<!-- g.title, g.content, g.image, g.max, g.open_date, g.secret, -->
	<!-- g.password from -->
	<!-- communityGroup g -->
	<!-- left join (select count(*) like_num, -->
	<!-- group_idx -->
	<!-- l_group_idx from grouplike -->
	<!-- GROUP BY group_idx) l -->
	<!-- on l.l_group_idx=g.idx -->
	<!-- order by g.idx desc -->
	<!-- </select> -->
	

	
		<select id="info" resultMap="CommunityGroup">
		SELECT
		*
		FROM
			(SELECT g.idx g_idx, g.title ,g.content , g.image , g.storedName, g.max ,
			g.open_date , g.secret
			, g.password, c.idx,g.member_idx
			FROM CommunityGroup g, CommunityCategory c
			WHERE g.category_idx = c.idx and g.idx=#{idx }) gk
		left join
			(select count(*) as g_like_num, group_idx as l_group_idx from
			grouplike
			GROUP BY group_idx order by g_like_num desc, null desc) l on
		l.l_group_idx=gk.g_idx

	</select>
	

<!-- 	<select id="info" resultMap="GroupLike"> -->
<!-- 		SELECT -->
<!-- 		* -->
<!-- 		FROM -->
<!-- 		(SELECT g.idx g_idx, g.title ,g.content , g.image ,g.max , -->
<!-- 		g.open_date , g.secret -->
<!-- 		, g.password -->
<!-- 		, k.keyword -->
<!-- 		FROM CommunityGroup g, -->
<!-- 		GroupKeyword k -->
<!-- 		WHERE g.idx = k.group_idx and g.idx=#{idx}) gk -->
<!-- 		left join -->
<!-- 		(select count(*) as like_num, group_idx as l_group_idx from -->
<!-- 		grouplike -->
<!-- 		GROUP BY group_idx order by like_num desc, null desc) l on -->
<!-- 		l.l_group_idx=gk.g_idx -->

<!-- 	</select> -->



	<select id="categoryGroup" resultMap="GroupLike">
		SELECT
		*
		FROM
		(SELECT g.idx
		g_idx, g.title ,g.content , g.image ,g.storedName, g.max , g.open_date , g.secret
		,
		g.password,c.category
		FROM CommunityGroup g,
		CommunityCategory c
		WHERE g.category_idx = c.idx and c.idx=#{idx} ) gk
		left join (select count(*) as like_num,
		group_idx as l_group_idx from
		grouplike
		GROUP BY group_idx order by
		like_num desc, null desc) l on l.l_group_idx=gk.g_idx
	</select>
	
	<select id="groupLike" resultMap="GroupLike" parameterType="int">
		select count(*) as like_num from groupLike where group_idx=#{idx }
	</select>



	 <select id="secretCommunityJoin" parameterType="zaksim.dto.CommunityGroup" resultType="int">
	 	 select count(*) from communityGroup where idx = #{idx } and password= #{password } 
	  </select>
	  


	<select id="existMember" parameterType="int" resultType="zaksim.dto.GroupMember" >
		select idx, group_idx ,member_idx  from groupMember  where member_idx=#{idx}
	</select>

	<select id="popularCount" resultType="int">
		SELECT COUNT(*) FROM communityGroup
	</select>

	<select id="popularPage" parameterType="zaksim.util.Paging" resultMap="GroupLike">
		SELECT * from (
	    SELECT rownum rnum, gl.*
			FROM (
				SELECT
				*
				FROM
				(SELECT g.idx
				g_idx, g.title ,g.content , g.image ,g.storedName, g.max , g.open_date , g.secret
				,	
				g.password,g.member_idx
				FROM CommunityGroup g order by g_idx asc) gk
				left join (select count(*) as
				like_num, group_idx as l_group_idx from
				grouplike
				GROUP BY group_idx
				) l on l.l_group_idx=gk.g_idx
				order by l.like_num desc nulls last
			) gl
	    ) rgl
	    where rgl.rnum between #{startNo} and #{endNo}
	</select>
	
	<select id="isCommunityMember" parameterType="map" resultType="Integer">
    select count(*) from groupMember where member_idx = #{memberIdx} AND group_idx = #{groupIdx }
	</select>
	
	<select id="newPage" parameterType="zaksim.util.Paging" resultMap="CommunityGroup">
	  SELECT * from (
	    SELECT rownum rnum, gl.*
			FROM (
				SELECT
			          g.idx g_idx, 
			          g.title,
			          g.content,
			          g.image,
			          g.storedName,
			       	  g.max,
			          g.open_date,
			          g.secret,
			          g.password,
			          g.member_idx,
			          like_num g_like_num
			      FROM CommunityGroup g
			      left join (
			          select count(*) as like_num, group_idx as l_group_idx from grouplike
			          GROUP BY group_idx
			      ) l
			      on l.l_group_idx=g.idx
	              order by idx desc
		    ) gl
	    ) rgl
	    WHERE rgl.rnum between #{startNo} and #{endNo}
	</select>


	<select id="categoryTotalCount" resultType="int" parameterType="int">
		    SELECT count(*) FROM (SELECT g.idx g_idx, g.title ,g.content , g.image ,g.max , g.open_date , g.secret 
			, g.password,c.category FROM CommunityGroup g, CommunityCategory c WHERE g.category_idx = c.idx 
			and c.idx=#{idx } ) gk left join (select count(*) as like_num, group_idx as l_group_idx from grouplike 
			GROUP BY group_idx order by like_num desc, null desc) l on l.l_group_idx=gk.g_idx 
	</select>
	
<!-- 		public List<GroupLike> categoryPage(Paging paging); -->
	<select id="categoryPage" parameterType="map" resultMap="CommunityGroup">
		SELECT * FROM (
        SELECT rownum rnum, R.* FROM (
        SELECT
		*
		FROM
		(SELECT g.idx
		g_idx, g.title ,g.content , g.image ,g.storedName, g.max , g.open_date , g.secret
		,
		g.password,c.category
		FROM CommunityGroup g,
		CommunityCategory c
		WHERE g.category_idx = c.idx and c.idx=#{idx } ) gk
		left join (select count(*) as g_like_num,
		group_idx as l_group_idx from
		grouplike
		GROUP BY group_idx order by
		g_like_num desc, null desc) l on l.l_group_idx=gk.g_idx
        ) R
        ) P
        WHERE rnum between #{paging.startNo } and #{paging.endNo }
	</select>
	
</mapper>